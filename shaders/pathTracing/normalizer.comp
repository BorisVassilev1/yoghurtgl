#version 460

#ifdef GL_ES
precision highp float;
#endif

layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

layout(rgba32f, binding = 1) uniform image2D img_input;
layout(rgba32f, binding = 0) uniform image2D img_output;

uniform int samples = 1;

// ACES tone mapping curve fit to go from HDR to LDR
// https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/
vec3 ACESFilm(vec3 x)
{
    float a = 2.51;
    float b = 0.03;
    float c = 2.43;
    float d = 0.59;
    float e = 0.14;
    return clamp((x * (a * x + b)) / (x * (c * x + d) + e), 0.0, 1.0);
}

vec3 LinearToInverseGamma(vec3 rgb, float gamma)
{
    //rgb = clamp(rgb, 0.0, 1.0);
    return mix(pow(rgb, vec3(1.0 / gamma)) * 1.055 - 0.055, rgb * 12.92, vec3(lessThan(rgb, 0.0031308.xxx)));
}

void main() {
	ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
	vec4 color = imageLoad(img_input, pixel_coords);
	//color = clamp(color / (samples), vec4(0.0), vec4(1.0));
	color = vec4(clamp(color.xyz / samples, vec3(0.0) , vec3(100.0)), 1.);
	
	color.xyz = ACESFilm(color.xyz);
	color.xyz = LinearToInverseGamma(color.xyz, 2.4);
	
	imageStore(img_output, pixel_coords, color);
	return;
}