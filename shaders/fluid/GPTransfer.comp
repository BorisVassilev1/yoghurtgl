layout(local_size_x = 128) in;

#include <fluid.glsl>

layout(std430, binding = 1) volatile coherent restrict buffer ParticleBuffer {
	Particle particleData[];
};

layout(rgba32f, binding = 0) uniform readonly image3D volume;

uniform vec3 b_min;
uniform vec3 b_max;

uniform float deltaTime = 0;
uniform ivec2 resolution;

void main() {
	uvec3 invID = gl_GlobalInvocationID;
	if(invID.x >= N) return;
	uint id = invID.x;

	Particle p1 = particleData[id];

	p1.velocity = imageLoad(volume, ivec3(p1.position) + ivec3(10)).xyz;

	particleData[id] = p1;
}
